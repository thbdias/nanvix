.\"
.\" Copyright (C) 2011-2013 Pedro H. Penna <pedrohenriquepenna@gmail.com>
.\"
.\"=============================================================================
.\"
.TH kill 2 "July 2013" "System Calls" "The Nanvix Programmer's Manual"
.\"
.\"=============================================================================
.\"
.SH NAME
.\"
kill \- Sends a signal to a process or a process group.
.\"
.\"=============================================================================
.\"
.\"
.SH "SYNOPSIS"
.\"
.IR "#include <signal.h>"

.BI "int kill(pid_t " pid ", int " sig ");"
.\"
.\"=============================================================================
.\"
.SH "DESCRIPTION"
.\"
The
.BR kill()
system call sends a signal to a process or a group of processes specified by
.IR pid .
The signal to be sent is specified by
.IR sig
and is either one from the list given in
.IR <signal.h>
or 0. If sig is 0 (the null signal), error checking is performed but no signal
is actually sent. The null signal can be used to check the validity of
.IR pid .

For a process to have permission to send a signal to a process designated by
.IR pid ,
unless the sending process has appropriate privileges, the real or effective 
user ID of the sending process shall match the real or saved set-user-ID of the
receiving process.

The user ID tests described above are not applied when sending
.BR SIGCONT
to a process that is a member of the same session as the sending process.

If
.IR pid
is greater than 0,
.IR sig
is sent to the process whose process ID is equal to
.IR pid .

If
.IR pid
is 0,
.IR sig
is sent to all processes (excluding an unspecified set of system processes)
whose process group ID is equal to the process group ID of the sender, and for
which the process has permission to send a signal.

If
.IR pid
is -1,
.IR sig
is sent to all processes (excluding an unspecified set of system processes) for
which the process has permission to send that signal.

If
.IR pid
is negative, but not -1,
.IR sig
is sent to all processes (excluding an unspecified set of system processes)
whose process group ID is equal to the absolute value of
.IR pid,
and for which the process has permission to send a signal.

If the value of
.IR pid
causes
.IR sig
to be generated for the sending process and if
.IR sig
is not blocked for the calling process, either
.IR sig
or at least one pending unblocked signal is delivered to the sending process
before 
.BR kill()
returns.
.\"
.\"=============================================================================
.\"
.SH "RETURN VALUE"
.\"
Upon successful completion, 0 is returned. Upon failure, -1 is returned and 
.IR errno
is set to indicate the error.
.\"
.\"=============================================================================
.\"
.SH ERRORS
.\"
.TP
.BR [EINVAL]
The value of the
.IR sig
argument is an invalid or unsupported signal number.

.TP
.BR [EPERM]
The process does not have permission to send the signal to any receiving 
process.

.TP
.BR [ESRCH]
No process or process group can be found corresponding to that specified by 
.IR pid . 
.\"
.\"=============================================================================
.\"
.SH "CONFORMING TO"
.\"
POSIX.1-2001
.\"
.\"=============================================================================
.\"
.SH AUTHOR
.\"
Pedro H. Penna <pedrohenriquepenna@gmail.com>
.\"
.\"=============================================================================
.\"
.SH "SEE ALSO"
.\"
.BR pause(2) ,
.BR signal(2) ,
.BR wait(2) ,
.BR signals(6)
