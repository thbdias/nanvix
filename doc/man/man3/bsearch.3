.\" 
.\" Copyright(C) 2011-2015 Pedro H. Penna <pedrohenriquepenna@gmail.com>
.\" 
.\" This file is part of Nanvix.
.\" 
.\" Nanvix is free software: you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation, either version 3 of the License, or
.\" (at your option) any later version.
.\" 
.\" Nanvix is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\" 
.\" You should have received a copy of the GNU General Public License
.\" along with Nanvix.  If not, see <http://www.gnu.org/licenses/>.
.\"

.TH "bsearch" "3" "April 2015" "Nanvix" "The Nanvix Programmer's Manual"

.\ "============================================================================

.SH "NAME"

bsearch \- Performs a binary search on a sorted table

.\ "============================================================================

.SH "SYNOPSIS"
.nf
.BI "#include <" "stdlib.h" >
.sp
.BI "void *bsearch(const void *" key ", const void *" base ,
.BI "              size_t " nmemb ", size_t " size ,
.BI "              int (*" compar ")(const void *, const void *));"
.fi
.\ "============================================================================

.SH "DESCRIPTION"

The
.BR bsearch()
function searches an array of 
.IR nmemb
objects, the initial element of which is pointed to by
.IR base ,
for an element that matches the object pointed to by
.IR key .
The size of each element in the array is specified by
.IR size .
If the 
.IR nmemb
argument has the value zero, the comparison function pointed to by
.IR compar
is not called and no match is found.

The comparison function pointed to by
.IR compar
is called with two arguments that point to the
.IR key
object and to an array element, in that order.

The application shall ensure that the comparison function pointed to by
.IR compar
does not alter the contents of the array. The implementation may reorder
elements of the array between calls to the comparison function, but do not
alter the contents of any individual element.

The implementation shall ensure that the first argument is always a pointer to
the
.IR key .

When the same objects are passed more than once to the comparison function, the
results is consistent with one another. That is, the same object always compare
the same way with the
.IR key .

The application shall ensure that the function returns an integer less than,
equal to, or greater than 0 if the
.IR key
object is considered, respectively, to be less than, to match, or to be greater
than the array element. The application shall ensure that the array consists
of all the elements that compare less than, all the elements that compare equal
to, and all the elements that compare greater than the
.IR key
object, in that order.

.\ "============================================================================

.SH "RETURN VALUE"

The
.BR bsearch()
function returns a pointer to a matching member of the array, or a null pointer
if no match is found. If two or more members compare equal, which member is
returned is unspecified.

.\ "============================================================================

.SH "ERRORS"

No errors are defined.

.\ "============================================================================

.SH "CONFORMING TO"

POSIX.1-2008

.\ "============================================================================

.SH "AUTHOR"
Pedro H. Penna <pedrohenriquepenna@gmail.com>

.\ "============================================================================

.SH "SEE ALSO"

.BR qsort(3)
