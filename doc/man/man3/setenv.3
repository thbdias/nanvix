.\" 
.\" Copyright(C) 2011-2015 Pedro H. Penna <pedrohenriquepenna@gmail.com>
.\" 
.\" This file is part of Nanvix.
.\" 
.\" Nanvix is free software: you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation, either version 3 of the License, or
.\" (at your option) any later version.
.\" 
.\" Nanvix is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\" 
.\" You should have received a copy of the GNU General Public License
.\" along with Nanvix.  If not, see <http://www.gnu.org/licenses/>.
.\"

.TH "setenv" "3" "May 2015" "Nanvix" "The Nanvix Programmer's Manual"

.\ "============================================================================

.SH "NAME"

setenv \- Adds or change environment variable

.\ "============================================================================

.SH "SYNOPSIS"

.BI "#include <" "stdlib.h" >

.BI "int setenv(const char *" envname ", const char *" envval ", int " \
overwrite ");"

.\ "============================================================================

.SH "DESCRIPTION"

The
.BR setenv()
function updates or adds a variable in the environment of the calling process.
The
.IR envname
argument points to a string containing the name of an environment variable to
be added or altered. The environment variable is set to the value to which
.IR envval
points. The function fails if
.IR envname
points to a string which contains an '=' character. If the environment variable
named by
.IR envname
already exists and the value of overwrite is non-zero, the function returns
success and the environment is updated. If the environment variable named by
.IR envname
already exists and the value of overwrite is zero, the function returns
success and the environment remains unchanged.

The
.BR setenv()
function updates the list of pointers to which
.BR environ
points.

The strings described by
.IR envname
and
.IR envval
are copied by this function.

The
.BR setenv()
function is not thread-safe.


.\ "============================================================================

.SH "RETURN VALUE"

Upon successful completion, zero is returned. Otherwise, -1 is returned,
.BR errno
set to indicate the error, and the environment is unchanged.

.\ "============================================================================

.SH "ERRORS"

.TP
.BR EINVAL
The
.IR envname
argument points to an empty string or points to a string containing an '='
character.

.TP
.BR ENOMEM
Insufficient memory was available to add a variable or its value to the
environment.

.\ "============================================================================

.SH "CONFORMING TO"

POSIX.1-2008

.\ "============================================================================

.SH "AUTHOR"
Pedro H. Penna <pedrohenriquepenna@gmail.com>

.\ "============================================================================

.SH "SEE ALSO"

.BR exec(2) ,
.BR getenv(3) ,
.BR putenv(3) ,
.BR unsetenv(3)
